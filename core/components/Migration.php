<?php
/**
 * @project  edu
 * @copyright Â© 2017 by ivoglent
 * @author ivoglent
 * @time  8/7/17.
 */


namespace credglv\core\components;


use credglv\core\BaseObject;
use credglv\core\interfaces\ComponentInterface;
use credglv\core\interfaces\MigrableInterface;


class Migration extends BaseObject implements ComponentInterface
{
    const DB_VERSION_NAME           = 'credglv_db_version';
    const CREADGLV_VERSION_NAME         = 'credglv_version';

    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * Check db version and up/down-grade
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

    }

    /**
     * @return array
     */
    private function getMigrationObjects()
    {
        $locations = [
            'credglv\core' => '',
            'credglv\helpers' => 'Helper',
            'credglv\extensions' => 'Extension',
            'credglv\migrations' => 'Migration',
            'credglv\models' => 'Model'];
        $migrations = [];
        foreach ($locations as $namespace => $type) {
            $m  = credglv()->helpers->file->findAllClass($namespace, $type, '\credglv\core\interfaces\MigrableInterface');
            $migrations = array_merge($migrations, $m);
        }
        return $migrations;
    }

    /**
     * Run when Lema need to upgrade db or code
     *
     */
    public function up()
    {
        $migrations = $this->getMigrationObjects();
        foreach ($migrations as $class) {
            /** @var MigrableInterface $migrator */
            $migrator = new $class();
            $migrator->onActivate();
        }
    }

    /**
     * Run if credglv uninstall
     */
    public function down()
    {
        $migrations = $this->getMigrationObjects();
        foreach ($migrations as $class) {
            /** @var MigrableInterface $migrator */
            $migrator = new $class();
            $migrator->onDeactivate();
        }
    }

    /**
     * Run uninstall tasks
     */
    public function uninstall()
    {
        $migrations = $this->getMigrationObjects();
        foreach ($migrations as $class) {
            /** @var MigrableInterface $migrator */
            $migrator = new $class();
            $migrator->onUninstall();
        }
    }

    /**
     * Show upgrade success message
     */
    public function upgradeSuccess()
    {
        $message = ' <div class="notice notice-success is-dismissible"><p>%s</p></div>';
        echo sprintf($message, __('Learn Master plugin currently upgraded successfully to new version : ' . CREDGLV_VERSION, 'credglv'));
    }
    /**
     * Upgrade all component when new version of credglv is installed
     */
    public function upgrade()
    {
        $migrations = $this->getMigrationObjects();
        foreach ($migrations as $class) {
            /** @var MigrableInterface $migrator */
            $migrator = new $class();
            $migrator->onUpgrade(CREDGLV_VERSION);
        }
        add_action( 'admin_notices', [$this, 'upgradeSuccess'] );
        credglv()->config->credglv_version = CREDGLV_VERSION;
    }
}